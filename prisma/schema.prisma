// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

generator dbml {
    provider = "prisma-dbml-generator"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id                        String   @id @default(cuid())
    email                     String   @unique
    password                  String
    role                      Role     @default(USER)
    createdAt                 DateTime @default(now())
    updatedAt                 DateTime @updatedAt
    Items                     Item[]
    profile                   Profile?
    currentHashedRefreshToken String?
}

model Profile {
    id        String   @id @default(cuid())
    username  String   @unique
    firstName String?
    lastName  String?
    bio       String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    userId    String?  @unique
    user      User?    @relation(fields: [userId], references: [id])
}

model DailySheet {
    id        String   @id @default(cuid())
    date      String
    slug      String   @unique
    summ      String
    published Boolean  @default(true)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Item {
    id        Int      @id @default(autoincrement())
    tenantId  Int
    areaId    String
    idx       String   @unique
    scu       String?
    name      String?
    price     Decimal? @db.Decimal(9, 2)
    sale_qty  Decimal? @db.Decimal(4, 2)
    round     Decimal? @db.Decimal(4, 2)
    unit_qty  Int?
    cost      Decimal  @db.Decimal(9, 2)
    createdAt DateTime @default(now())
    modified  DateTime @default(now())

    Category   Category? @relation(fields: [categoryId], references: [id])
    categoryId String?
    User       User?     @relation(fields: [userId], references: [id])
    userId     String?

    @@unique([tenantId, areaId, idx])
    @@map("items")
}

model Category {
    id        String   @id @default(cuid())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    items     Item[]
}

enum Role {
    ADMIN
    USER
}